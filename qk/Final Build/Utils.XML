<?xml version="1.0"?>
<doc>
<assembly>
<name>
Utils
</name>
</assembly>
<members>
<member name="F:Utils.APIS.Declarations.INPUT.dwType">
	<summary>
 Specifies what type of input structure it is
 INPUT_MOUSE = 0
 INPUT_KEYBOARD = 1
 INPUT_HARDWARE = 2
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KeyboardFlags.KEYEVENTF_EXTENDEDKEY">
	<summary>
 Prefix the scan code with a prefix byte having the value HE0
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KeyboardFlags.KEYEVENTF_KEYUP">
	<summary>
 The key specified in bVk is being released. If this flag is not specified, the key is being pressed. 
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KeyboardFlags.KEYEVENTF_UNICODE">
	<summary>
 Windows 2000: Use a Unicode character key generated by a non-keyboard hardware input which is imitating keyboard input. 
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KEYBDINPUT.wVk">
	<summary>
 The virtual-key code of the key to simulate pressing or releasing.
 </summary>
	<remarks>If dwFlags contains the KEYEVENTF_UNICODE tag, this must be 0. </remarks>
</member><member name="F:Utils.APIS.Declarations.KEYBDINPUT.wScan">
	<summary>
 If dwFlags contains the KEYEVENTF_UNICODE flag, 
 this specifies the hardware scan code of the Unicode character key to simulate pressing or releasing. 
 If that flag is not used, this must be 0.
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KEYBDINPUT.dwFlags">
	<summary>
 If dwFlags contains the KEYEVENTF_UNICODE flag, 
 this specifies the hardware scan code of the Unicode character key to simulate pressing or releasing. 
 If that flag is not used, this must be 0.
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KEYBDINPUT.time">
	<summary>
 The time stamp of the keyboard input event, in milliseconds. 
 If 0, the system creates a time stamp by default. 
 </summary>
	<remarks></remarks>
</member><member name="F:Utils.APIS.Declarations.KEYBDINPUT.dwExtraInfo">
	<summary>
 An additional 32-bit value associated with the keyboard event.
 </summary>
	<remarks></remarks>
</member><member name="T:Utils.APIS.Declarations.KEYBDINPUT">
	<summary>
 The KEYBDINPUT structure holds information about a keyboard input event. 
 The various data members describe the exact nature of the keyboard input event. 
 Windows 2000: This structure can also be used to synthisized keyboard input generated by a hardware device imitating the keyboard.
 </summary>
	<remarks></remarks>
</member><member name="M:Utils.Xml.XMLNodeParsers.GetNode(System.Xml.XmlNode,System.String,System.Xml.XmlNode)">
	<summary>		
 RootNode - XML Node to work from
 XPath - a Path in the following form: 
 "Node\Node\Node" or
 "" or
 "Node\Node\@Attribute" or
 "@Attribute" or
 "Node"
 DefaultNode - the node to return if node specified in path doesen't Exist
 
 Example:
 Given the following node in the root node argument
 <BaseNode1 BaseAttribute1="avalue">
			<SubNode2 SubAttr="this is a string"/>
		</BaseNode1>
 If given "BaseNode1\@BaseAttribute1"  for XPath it will return an attribute with a
 value of 'avalue'
 Given "BaseNode1" it will return a node with an xml equivalent of
 <BaseNode1 BaseAttribute1="avalue">
			<SubNode2 SubAttr="this is a string"/>
		</BaseNode1>
 Given "BaseNode1\SubNode2\@SubAttr it will return an attribute with a
 value of 'this is a string'
 Given a value of "BaseNode1\SubNode" it will return an empty node save for its name of "SubNode"
 Given a XPath of "BaseNode1\NonExistingNode" it will return the passed default parameter
 </summary>
</member>
</members>
</doc>